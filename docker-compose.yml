version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ssl-toolkit-backend
    restart: unless-stopped
    environment:
      - SECRET_KEY=${SECRET_KEY:-development-secret-key}
      - FLASK_ENV=${FLASK_ENV:-production}
    volumes:
      - /tmp/ssl-toolkit:/tmp/ssl-toolkit
    networks:
      - ssl-toolkit-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ssl-toolkit-frontend
    restart: unless-stopped
    networks:
      - ssl-toolkit-network
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  nginx:
    image: nginx:alpine
    container_name: ssl-toolkit-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./certs:/etc/nginx/ssl
    networks:
      - ssl-toolkit-network
    depends_on:
      - backend
      - frontend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  ssl-toolkit-network:
    driver: bridge

volumes:
  ssl-data:
    driver: local

